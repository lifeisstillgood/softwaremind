============
Introduction
============

Overview
--------


AI as an embedded knowledge tool - spanner wmbeds other peoples knowledge - thisnis that to larger extent
* software is a new form of literacy
  literacy is a technology, as indeed is speech and perhaps thought?
  story of olphulla goth germainic invents alphanet and writes it down - literacy matters as a technology 
  the blub paradox and software literacy - you cannot have large software literate company without 
  having all literate employees - its like mechanised warfare or gengis khan 
  you can only move the whole army when everyone is on horseback - speed of sound 

software as Eunachs - eunachs goven powrr in rime or byzantium 
so that emperors did not need to worry that bureaucracy woukd be captured by "barons"
But european industrial state has dofferent needs - movement towards wealth gathering 

i dont like M&A - its mostly about wealtyh peoples egos (see paramount) 
"i wish i had served my god as well as i served my king"

* Companies will become programmable companies 
  - the actions of the company
  speed up / improved but also *limited* to what the software will allow, 
  even if we can alter version numbers.
  - robotics as a model for companies - perception and funding
  - software guard rails - to leaser and greater extents software guides what individual enployees can or cannot do
    the policy is encoded - sales discount limits, rlease appovals etc
    But these are axattered and hard to extract. but they donexist 
    reading the code, writing the tests, putting the org in test rig allows you to 
    doscover ans teat thise limits, 
    younkight be abek to do some with ai - but you can do it all now with effort and software
    seeing the gilded cage? all in one enterprise language?
   - companies are *machines*. Entreprenuers build companies like
     inventors build machines. They do one thing well.  COmpanies that 
do many things are a financial cheat - using treasury to reduce cost of
capital, see banks are a mirage.
    The point is if we see them as 'autonomous functioning machines that
have role in benefiting human society' then their position becomes
clearer.  And it challenges some of assumptions of capitalism.  See
"public transport is the answer to how can uber manage"?
    
* coders new managers - which leads to "software is disaggregating management"

* disaggregation of management - implications 
  - co-ordination of company is way more effective in software, test rigs etc.
  - co-ordination of change is mostly politics, which can be eitehr democratic
    and open or totalitarian and feudal.  I prefer one. THe bet is one works
    better.
  - management role in deciding what to do where to go (strategy) is limited.
    Thats basically eitehr built in (oil production) or its top down executive
choice or shareholder choice.
  - management role in operations can be large - but again this is built and
    modelled.  hilarious thing on indiced demand and modelled software showing
road changes in future. THere is not a choice.
  - managemtn role in tactics and doctrine.  Yes - but those are also bottom up,
    industry practise - see DevManual
  - coase and chandler views on mgmt
  - simplified large company single treasury cost of capital
  - finance as 2(O) function or 4(O) 

* serverless company
  the intenral franework might not be needed
  coase and chandler
  unix operating system
  company operating system is not "core competancy"
  people try to outsource but can work for very snall
  companies, medium companies isually try to customise (demon)
  but at some point each compnay is many companies (do one thing well)
  with shared treasury (multi prodict sales)
  Foss chnages the coaseing equilibrium- thats wjat we miss about 
  foss - everythign is a buskness operating system



* FOSS - 
  if marginal cost of software writing is essentically Ramen, then the choice
for who works on your software is mission.  If your mission is inspiring, you
get free work that needs co-ordinating (which can be software dirven)
    

* use of democracy in companies - allocation of resources in abscence of
  "commanders intent" - we are supplying a new product (company) to a financier.
  hard to ignore use of democracy when feudalism of management is breaking.

* AI / journalism
  open infomraiton flow
  You dont need AI tomorrow, you can software today. 

* MOOP - epidemiology at scale
  
  https://news.ycombinator.com/item?id=40130477
* conclusion - software is literacy, for all. But it will explicitly define what

* orgs can and cannot do, regulate and prepsent challenges as whistle blowing 
  but only criminal orgs can benefot from secrecy more than gain from speed and 
  perception.
  Democracy, openness, and realisation of benefits and losses. modelling?

(doctrine, (wardley - purpose, landscape, climate, leadership, doctrine)
2(O) - majors have tactical control, generals have operational control ans politicians have strategic control
and everyoneninterferes one level below 


 conclusion: write code. Its fun. It is a new form of literacy and it 
 will like the previous form, bend human organisation around its gravity.
 AI is useful, but almost everything people think AI can solve tomorrow 
 can be solved today (thats people putting too much ito AI not AI being bad)

 We have a democratic bet to make - our society builds on individual rights
and the next forms of society are being built now.  We need to win the
democracti bet.
 
<<<software_literacy.rst>>>

<<<2_orders_of_magnitude.rst>>>

<<<enforced_openness.rst>>>

<<<the_code_is_the_design.rst>>>

<<<coders_are_the_new_managers.rst>>>

<<<programmable_company.rst>>>


<<<the_architext_paradox.rst>>>

<<<companies_are_version_numbered.rst>>>

<<<zipper_project_planning.rst>>>

<<<software_solves_management.rst>>>

<<<whole_org_test_rig.rst>>>

<<<robotics_company.rst>>>

<<<sdlc_as_day_2_day.rst>>>

<<<open_source_and_underfunding_of_perfect_competition.rst>>>

<<<moop.rst>>>

<<<software_mind.rst>>>

<<<socialist_utopia.rst>>>

<<<totalitarian_bet.rst>>>

<<<democractic_bet.rst>>>


<<<equal_say_equal_share.rst>>>



<<<tomorrows_workplace.rst>>>

<<<cyber_security.rst>>>

<<<ai_journalism.rst>>>

<<<non_jobs.rst>>>


<<<rules_vs_regulations.rst>>>


... more politics below here than above.

<<<super_cooperative_species.rst>>>

<<<built_organisations_deep_state.rst>>>

<<<implicit_is_now_explicit.rst>>>

<<<rentierism.rst>>>

<<<theory_of_firm__coase.rst>>>

<<<organisational_mental_health.rst>>>


