============
Introduction
============

* Stick to this plot

* software is a new form of literacy
* Companies will become programmable companies - the actions of the company
  limited to what the software will allow, even if we can alter version numbers.
* coders new managers - which leads to "software is disaggregating management"
* role of management, and role of finance versus supervision 2(O), choice between
  coase marketplace and bureaucratic capture.  But benefits of treasury
if younmeed co-ordination testing co-ordinates hust fine. if its not working ounneed bigger test rigs
if you cannot agree on what tests ti write you cannot agree on anything and your financers need to step in 
if you need to agree then you can try democracy leadershios and doctrine 

if younwant hundreds of sevwlopers to do what you want you can either inspure them to donit for free or pay them 
but younwill have to oay more than the inspiring giy with smaller budget 
a lot oore tonpay people to five uo freedom 

* use of democracy in companies - allocation of resources in abscence of
  "commanders intent" - we are supplying a new product (company) to a financier.
  hard to ignore use of democracy when feudalism of management is breaking.
* programmable company -> robotics. Perception. But we need truth (so journalism
  inside the company and journalism outside.) Where truth and journalism goes so
goes democracy.
  AI / journalism
  open infomraiton flow
  You dont need AI tomorrow, you can software today. 
* conclusion - software is literacy, for all. But it will explicitly define what
* orgs can and cannot do, regulate and prepsent challenges as whistle blowing 
  but only criminal orgs can benefot from secrecy more than gain from speed and 
  perception.
  Democracy, openness, and realisation of benefits and losses. modelling?

(doctrine, (wardley - purpose, landscape, climate, leadership, doctrine)
<<<software_literacy.rst>>>

<<<2_orders_of_magnitude.rst>>>

<<<enforced_openness.rst>>>

<<<the_code_is_the_design.rst>>>

<<<coders_are_the_new_managers.rst>>>

<<<programmable_company.rst>>>


<<<the_architext_paradox.rst>>>

<<<companies_are_version_numbered.rst>>>

<<<zipper_project_planning.rst>>>

<<<software_solves_management.rst>>>

<<<whole_org_test_rig.rst>>>

<<<robotics_company.rst>>>

<<<sdlc_as_day_2_day.rst>>>

<<<open_source_and_underfunding_of_perfect_competition.rst>>>

<<<moop.rst>>>

<<<software_mind.rst>>>

<<<socialist_utopia.rst>>>

<<<totalitarian_bet.rst>>>

<<<democractic_bet.rst>>>


<<<equal_say_equal_share.rst>>>



<<<tomorrows_workplace.rst>>>

<<<cyber_security.rst>>>

<<<ai_journalism.rst>>>

<<<non_jobs.rst>>>


<<<rules_vs_regulations.rst>>>


... more politics below here than above.

<<<super_cooperative_species.rst>>>

<<<built_organisations_deep_state.rst>>>

<<<implicit_is_now_explicit.rst>>>

<<<rentierism.rst>>>

<<<theory_of_firm__coase.rst>>>

<<<organisational_mental_health.rst>>>


