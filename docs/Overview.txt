Software Literacy

 -> Coasian transaction costs
 -> personal observation of software developers as capability
 
 -> Director Hazing and why computers beat traders in HFT
    Run the company vs change the company
    Of course change the company sounds glamourous
    But why have a commpany that is not programmable 0 why change the company thorugh anythign but code?
    
 -> Programmable Company
    -> Automation
    -> self running - Marketing manager.
    
 -> Governance
 -> democracy in companies
    Piketty, socialism as ocean, and software as capital. Open source
    and socialism - it is just faster than everything else.
    So open will overcome.
    
 -> new project management - or why changing compnay not working on the company

 -> changing the comany is "design is the build"
 -> So you need to specifiy the change exactly -
    project managers are like todays builder / architect.
    GOing to be unnecessary.

 -> Data, trust, cost, ledgers,
    Amazon is a RDBMS company.
    Hard to see who will be an AI company
    But feasible to say who will be ledger company - all of them.
    Ledgers reduce costs and increase trust amoung industry players
  -> Fake news and project management
  
ideas
-----
project mgmt

- effectiveness of troops in battle 60-90 days to peak, 200 to trough
lindybeige
- so why not use that for team formation? 

Future

- Climate change
-- a war footing solution for the globe - like march of dimes

team based performance reviews - more useful more team focused

index
    The Software Mind
    Why
    Software Literacy
    Socrates Socialism and capitalism
    The software literate company, and the programmable company
    Follow the Literate
    Be opinionated
    Why are companies big or small?
    Just what is a programmable company?
    What aspects of Coasian Transaction Costs are being changed by software?
    What is the political environment around data
    Software applied to Data
    A personal observation
    Director Hazing
    What about landscape - what are other companies doing.
    Fake News and Fake Project Management
    The programmable company
    Trustable processes
    Trusting data and firm size
    Trolley problem
    Recap
    Governance and Software
    The Trolley Problem in Software Governance
    Knight Capital
    Office Of Personnel Management
    Sweden Ministry of Transport
    Target and Yahoo
    Equifax
    Healthcare.gov
    What have we learnt
    There is hope
    New Project Management
    A New Hope
    The rare, right way
    Software is politics now
    The revolution has not happened yet
    Why write a book?
    The shape of companies and countries to come
    Politics and software
    CIA and job protection
    Redefining privacy
    The emerging politics
    The emerging secure computing platform
    Company
    What I cannot create I do not understand
    Tendency to guess
    Topless computing
    Not nearly as much fun as it sounds
    Why Am I writing these articles?
    4. Coase
    Growing Mary Poppins
    Great Hollowing Out
    Blockchain is not a magic sprinkle dust
    solving gang problems
    The autonomous vehicle bizplan fallacy
    Software demands global regulation
    How is the future going to look?
    What is about to make my life harder?
    Disks are becoming tapes
    Parallel programming
    Tarpits
    Information security is as busted as DRM
    Privacy
    Conclusion
    2019 wish lists
    bibliography
    Hardware and software
    Software as a machine
    Robo automation and AI
    Web of Trust and crypto currency
    Landscape and strategy
    Simple to complex roadmaps
    Kaizen vs Kaikaku
    WHy not SaaS
    Operations
    Politics and software
    Problems with PageRank
    Software Socialist
    The new socialism - of the character
    Science funding and support
    Statistical socialist
    Rise (return) of curation
    Position on platform vs search vs responsibility
    AI Auditing
    Predistribution
    Brexit
    SICP for orgs
    The Big Ideas
    A point about Pikety
    A point about project management and democratic companies
    The problem is always at the top
    Fractal Management
    security (secrets management & auth)
    security (deployment / repeatability)
    prod parallel
    A point about Simplicity
    Data Mangement  Philosophy


Using SteveY's rant
we see
1. API SOA is the right way

2. lots to learn from amazon

3. that testing is an interesting apprpach - QA and unit tests lie on a
spectrum, and that have solid production monitoirng is effectively having solid testing.  I go for doctests and QA tests as the right balance - too much mocking is too much mucking about.  You seem to get concetpually the right level of breakdown. not the level for your testing tool.  Having more test code than actual code is *not* a positive.

4. also interesting view on coase - not merely size of pizza team, but
reuse of code as a metric of organisational cohesion - start up to spreadeagled.
Lots of companies have many ways to do same thing.  But there should be one right way to do it. Look at xkcd cartoon - 14 different standards.  A cohesive org has one common standard - by fiat or by discussion.  If an org is happy to allow many flowers to bloom to find the right way then frankly its a community not an atomic unit.


